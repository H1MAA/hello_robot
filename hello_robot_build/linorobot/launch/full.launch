<launch>
    <arg name="node_start_delay" default="15.0" />
    <arg name="comm_start_delay" default="30.0" />

    <!-- bringup.launch -->
    <!-- Start ROS communication between the robot's computer and Linorobot base -->
    <node pkg="rosserial_python" name="rosserial_lino" type="serial_node.py" output="screen">
        <param name="port" value="/dev/linobase" />
        <param name="baud" value="57600" />
    </node>

    <!-- IMU Relay and Filter -->
    <include file="$(find linorobot)/launch/include/imu/imu.launch" />

    <!-- Publish Linorobot odometry -->
    <node pkg="linorobot" name="lino_base_node" type="lino_base_node"></node>

    <!-- Publish static transform from base_footprint to base_link -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="base_footprint_to_base_link" args="0 0 0.098 0 0 0  /base_footprint /base_link"/>

    <!-- Odom-IMU Extended Kalman Filter-->
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization"> 
        <remap from="odometry/filtered" to="odom" />
        <rosparam command="load" file="$(find linorobot)/param/ekf/robot_localization.yaml" />
    </node>

    <!-- Run Linorobot compatible laser drivers -->
    <include file="$(find linorobot)/launch/include/laser.launch" />
    
    <!-- navigate.launch -->    
    <!-- Map server -->
    <arg name="map_file" default="$(find linorobot)/maps/main_floor_map.yaml"/>
    <node pkg="map_server" name="map_server"  type="map_server" args="$(arg map_file)" launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@' "/>

    <!-- AMCL used for localization -->
    <include file="$(find linorobot)/launch/include/amcl.launch" />
    
    <!-- Calls navigation stack packages for compatible Linorobot base -->
    <!-- Takes reference from env variable LINOBASE. ie. export LINOBASE=2wd -->
    <include file="$(find linorobot)/launch/include/move_base/move_base_$(env LINOBASE).launch" />
    
    <!-- agm_comm.launch -->
    <node name="web_comm_server_node" pkg="agm_comm" type="web_comm_server_node" launch-prefix="bash -c 'sleep $(arg comm_start_delay); $0 $@' " />
    <node name="agm_worker_node" pkg="agm_comm" type="agm_worker_node" args="609423e4cfb25d002401caf2" launch-prefix="bash -c 'sleep $(arg comm_start_delay); $0 $@' " />
    
    <!-- Run rosbridge server -->
    <include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch" />
    
</launch>
